//
//Открыть форму документа по его ссылке
//
ПараметрыФормы = Новый Структура("Ключ", докСсылка);
ОткрытьФорму("Документ.ЗаказПокупателя.ФормаОбъекта", ПараметрыФормы); 

//
//Открыть форму документа по его ссылке
//
ОткрытьЗначение(Элемент.текущиеДанные.ссылка);

//"ОтчетОРозничныхПродажах"
ИмяДокумента = Объект.Метаданные().Имя;


//Получим список заполняемых реквизитов
ТаблицаРеквизитов 				= ПолучитьРеквизитыСчетовУчета(ИмяДокумента, ИмяТабличнойЧасти);

Если ТаблицаРеквизитов.Количество()=0 Тогда
  Возврат;
КонецЕсли;


ТаблицаСкладов = ТаблицаРеквизитов.Скопировать();
ТаблицаСкладов.Свернуть("СкладШапки, СкладТабличнойЧасти, ПриходныйОрдерШапки, ПриходныйОрдерТабличнойЧасти");
ТаблицаСкладов.Колонки.Добавить("Склад", 			Новый ОписаниеТипов("СправочникСсылка.Склады"));
ТаблицаСкладов.Колонки.Добавить("СкладДокумента", 	Новый ОписаниеТипов("СправочникСсылка.Склады"));
ТаблицаСкладов.Колонки.Добавить("Розничный",		Новый ОписаниеТипов("Булево"));


//устаноитьСчета
докОб.ЗаполнитьСчетаУчетаВТабЧасти(докОб.товары, "товары", истина, Ложь);

//первое значение из запроса
Запрос.Выполнить().Выгрузить()[0][0];

//быстро вывести результат запроса
РезЗапроса = Запрос.Выполнить();
ТабДокумент = Новый ТабличныйДокумент;
Построитель = Новый ПостроительОтчета;
Построитель.ИсточникДанных=Новый ОписаниеИсточникаДанных(РезЗапроса);       
Построитель.Вывести(ТабДокумент);
ТабДокумент.Показать("2");

//из таблицы значений
Построитель = Новый ПостроительОтчета;
Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТЗ);
Построитель.Выполнить();
Построитель.Вывести();



//работа с запросом
РезультатЗапроса = НашЗапрос.Выполнить(); 
//Далее возможны три варианта:
//во-первых, из результата запроса может быть получена выборка (линейная, иерархическая и т.д.),
//Объект "РезультатЗапроса" имеет метод "Выбрать()", который возвращает новый объект "ВыборкаИзРезультатаЗапроса".
//В зависимости от параметра <ТипОбхода> метода "Выбрать()" выборка будет линейной (по умолчанию), иерархической или по группировкам.
//Далее выборка обходится с помощью цикла "Пока Выборка.Следующий() Цикл", 
//а в теле цикла производятся какие-то действия, например, вывод областей в табличный документ.
Выборка = РезультатЗапроса.Выбрать(); //по умолчанию применяется прямой тип обхода
//обход записей в выборке
Пока Выборка.Следующий() Цикл
	//обращение к полям
	Сообщить(Выборка.Наименование);
КонецЦикла;

//во-вторых, результат запроса может быть выгружен в таблицу или дерево значений,
//Объект "РезультатЗапроса" имеет метод "Выгрузить()", который возвращает таблицу значений или дерево значений, 
//в зависимости от переданного параметра <Тип обхода>. Если устанавливается прямой тип обхода (по умолчанию), 
//то будет создана таблица значений, иначе — дерево значений.
//Далее таблица значений (дерево значений) может быть обработана средствами встроенного языка или показана пользователю в табличном поле.
ТабЗнач = РезультатЗапроса.Выгрузить(); //по умолчанию прямой тип обхода
ДеревоЗнач = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам); 

//в-третьих, результат запроса может являться источником данных для сводной таблицы.
//Результат запроса может быть использован как источник данных для сводной таблицы.
//При этом итоги (см. предложение ИТОГИ в тексте запроса) становятся ресурсами (отображаются в области данных), 
//а группировочные поля, по которым они подсчитываются, становятся измерениями сводной таблицы.
//В качестве источника данных для сводной таблицы может быть также использован объект "ПостроительОтчета",
//но ему на вход тоже подается запрос, поэтому можно сказать, что основа любой сводной таблицы — это запрос к базе данных.
ТД = ЭлементыФормы.ПолеТабличногоДокумента1;
СводнаяТаблица = ТД.ВстроенныеТаблицы.СводнаяТаблица1;
СводнаяТаблица.ИсточникДанных = РезультатЗапроса;  //<= вот здесь самое важное!
СводнаяТаблица.ОтображатьПоля = Истина;

//оформление строки
 Процедура ТЗПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	 Если ДанныеСтроки.артикул = "ИТОГО" Тогда
		 для каждого ячейка из ОформлениеСтроки.Ячейки цикл
			 //ячейка.ЦветФона = Новый Цвет(239, 69, 217);
			 ячейка.ЦветФона = Новый Цвет(255, 228, 225);
			 ячейка.шрифт =Новый Шрифт(ОформлениеСтроки.Шрифт, , , истина);
		конецЦикла;		
	КонецЕсли;	
 КонецПроцедуры

//открыть окно выбора
Форма=Справочники.Номенклатура.ПолучитьФормуВыбора();
Форма.Заголовок="Выбор номенклатуры для ";
Форма.Отбор.Ссылка.Использование=Истина;
Форма.Отбор.Ссылка.ВидСравнения=ВидСравнения.ВСписке;
//Форма.Отбор.Ссылка.Значение=СписокНоменклатуры;// ТЗ запроса 
Форма.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;    
ВыбранноеЗначение=Форма.ОткрытьМодально();


//найти и заменить пароль пользователя
Запрос.Текст = 	"ВЫБРАТЬ Пользователь.Ссылка
	|ИЗ	Справочник.Пользователи КАК Пользователь
	|ГДЕ Пользователь.Родитель = &Родитель";
Запрос.УстановитьПараметр("родитель", Справочники.Пользователи.НайтиПоНаименованию("Уволены"));	
массПрод =  Запрос.Выполнить().Выгрузить();
для каждого прод из массПрод цикл
	продС = прод.ссылка;
	пользИБ = ПользователиИнформационнойБазы.НайтиПоИмени(СокрЛП(продС.код));		
	пользИБ.пароль = "уволен123";
	пользИБ.Записать();		
конецЦикла;
